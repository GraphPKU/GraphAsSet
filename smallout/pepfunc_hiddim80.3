Namespace(dataset='pepfunc', repeat=1, num_workers=0, amp=True, compile=True, batch_size=2, testbatch_size=2, epochs=80, wd=0, lr=0.0008, beta=0.997, minlr=4e-05, K=0.0, gradclipnorm=1.0, decompnoise=1e-06, seedoffset=6, warmstart=40, conststep=0, cosstep=20, use_y_scale=False, dp=0.0, eldp=0.0, act='silu', lossparam=0.0, advloss=False, embdp=0.0, embbn=False, emborthoinit=False, degreeemb=False, embln=True, featdim=-1, hiddim=80, caldim=-1, normA=False, laplacian=True, sqrtlambda=True, elres=True, usesvmix=True, vmean=False, vnorm=False, elvmean=False, elvnorm=False, snorm=True, gsizenorm=1.9, l_encoder='deepset', l_layers=4, l_combine='mul', l_aggr='mean', l_res=True, l_mlptailact1=True, l_mlplayers1=2, l_mlpnorm1='ln', l_mlptailact2=False, l_mlplayers2=0, l_mlpnorm2='none', num_layers=6, sv_uselinv=True, sv_tailact=False, sv_res=True, sv_numlayer=1, sv_norm='none', el_uselinv=True, el_uselins=False, el_tailact=True, el_numlayer=2, el_norm='ln', el_uses=False, conv_uselinv=True, conv_tailact=False, conv_numlayer=1, conv_norm='none', predlin_numlayer=1, predlin_norm='none', lexp='mlp', lexp_layer=2, lexp_norm='ln', outln=False, pool='max', Tm=1, save=None, load=None, use_pos=False, align_size=32)
fixed bincls
10873 2331 2331
split 10873 2331 2331
num_task 10
PiOModel(
  (inputencoder): QInputEncoder(
    (xemb): MultiEmbedding(
      (embedding_list): ModuleList(
        (0): Embedding(18, 80, padding_idx=0)
        (1): Embedding(4, 80, padding_idx=0)
        (2-3): 2 x Embedding(8, 80, padding_idx=0)
        (4): Embedding(6, 80, padding_idx=0)
        (5): Embedding(2, 80, padding_idx=0)
        (6): Embedding(7, 80, padding_idx=0)
        (7-8): 2 x Embedding(3, 80, padding_idx=0)
      )
      (postemb): Sequential(
        (0): LayerNorm((80,), eps=1e-05, elementwise_affine=False)
      )
    )
    (edgeEmb): MultiEmbedding(
      (embedding_list): ModuleList(
        (0-2): 3 x Embedding(5, 80, padding_idx=0)
      )
      (postemb): Sequential(
        (0): LayerNorm((80,), eps=1e-05, elementwise_affine=False)
      )
    )
    (LambdaEmb): MLPEncoding(
      (lin): MLP(
        (lin): Sequential(
          (0): Linear(in_features=1, out_features=160, bias=True)
          (1): LayerNorm(
            (norm): LayerNorm((160,), eps=1e-05, elementwise_affine=True)
          )
          (2): SiLU(inplace=True)
          (3): Linear(in_features=160, out_features=80, bias=True)
          (4): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (5): SiLU(inplace=True)
        )
      )
    )
    (distEmb): MLPEncoding(
      (lin): MLP(
        (lin): Sequential(
          (0): Linear(in_features=1, out_features=160, bias=True)
          (1): LayerNorm(
            (norm): LayerNorm((160,), eps=1e-05, elementwise_affine=True)
          )
          (2): SiLU(inplace=True)
          (3): Linear(in_features=160, out_features=80, bias=True)
          (4): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (5): SiLU(inplace=True)
        )
      )
    )
  )
  (LambdaEncoder): PermEquiLayer(
    (set2set): Sequential(
      (0): Set2Set(
      (mlp1): MLP(
        (lin): Sequential(
          (0): Linear(in_features=80, out_features=80, bias=True)
          (1): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (2): SiLU(inplace=True)
          (3): Linear(in_features=80, out_features=80, bias=True)
          (4): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (5): SiLU(inplace=True)
        )
      )
      (mlp2): MLP(
        (lin): Sequential(
          (0): Linear(in_features=80, out_features=80, bias=True)
          (1): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (2): SiLU(inplace=True)
          (3): Linear(in_features=80, out_features=80, bias=True)
          (4): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (5): SiLU(inplace=True)
        )
      )
    )
      (1): Set2Set(
      (mlp1): MLP(
        (lin): Sequential(
          (0): Linear(in_features=80, out_features=80, bias=True)
          (1): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (2): SiLU(inplace=True)
          (3): Linear(in_features=80, out_features=80, bias=True)
          (4): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (5): SiLU(inplace=True)
        )
      )
      (mlp2): MLP(
        (lin): Sequential(
          (0): Linear(in_features=80, out_features=80, bias=True)
          (1): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (2): SiLU(inplace=True)
          (3): Linear(in_features=80, out_features=80, bias=True)
          (4): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (5): SiLU(inplace=True)
        )
      )
    )
      (2): Set2Set(
      (mlp1): MLP(
        (lin): Sequential(
          (0): Linear(in_features=80, out_features=80, bias=True)
          (1): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (2): SiLU(inplace=True)
          (3): Linear(in_features=80, out_features=80, bias=True)
          (4): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (5): SiLU(inplace=True)
        )
      )
      (mlp2): MLP(
        (lin): Sequential(
          (0): Linear(in_features=80, out_features=80, bias=True)
          (1): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (2): SiLU(inplace=True)
          (3): Linear(in_features=80, out_features=80, bias=True)
          (4): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (5): SiLU(inplace=True)
        )
      )
    )
      (3): Set2Set(
      (mlp1): MLP(
        (lin): Sequential(
          (0): Linear(in_features=80, out_features=80, bias=True)
          (1): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (2): SiLU(inplace=True)
          (3): Linear(in_features=80, out_features=80, bias=True)
          (4): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (5): SiLU(inplace=True)
        )
      )
      (mlp2): MLP(
        (lin): Sequential(
          (0): Linear(in_features=80, out_features=80, bias=True)
          (1): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (2): SiLU(inplace=True)
          (3): Linear(in_features=80, out_features=80, bias=True)
          (4): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (5): SiLU(inplace=True)
        )
      )
    )
      (4): Identity()
    )
    (set2vec): Sequential(
      (0): MLP(
      (lin): Sequential(
        (0): NoneNorm()
      )
    )
    )
  )
  (elprojs): ModuleList(
    (0-5): 6 x sv2el(
      (linv1): Linear(in_features=80, out_features=80, bias=False)
      (linv2): Linear(in_features=80, out_features=80, bias=False)
      (lins1): Identity()
      (lins2): Identity()
      (lin): MLP(
        (lin): Sequential(
          (0): Linear(in_features=80, out_features=80, bias=True)
          (1): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (2): SiLU(inplace=True)
          (3): Linear(in_features=80, out_features=80, bias=True)
          (4): LayerNorm(
            (norm): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
          )
          (5): SiLU(inplace=True)
        )
      )
    )
  )
  (svmixs): ModuleList(
    (0-5): 6 x svMix(
      (linv1): Linear(in_features=80, out_features=80, bias=False)
      (linv2): Linear(in_features=80, out_features=80, bias=False)
      (linv3): Identity()
      (lins1): MLP(
        (lin): Sequential(
          (0): Linear(in_features=80, out_features=80, bias=True)
        )
      )
      (lins2): MLP(
        (lin): Sequential(
          (0): Linear(in_features=80, out_features=80, bias=True)
        )
      )
      (lins3): Identity()
    )
  )
  (convs): ModuleList(
    (0-5): 6 x DirCFConv(
      (lins): MLP(
        (lin): Sequential(
          (0): Linear(in_features=80, out_features=80, bias=True)
        )
      )
      (linv): Linear(in_features=80, out_features=80, bias=False)
    )
  )
  (predlin): MLP(
    (lin): Sequential(
      (0): Linear(in_features=80, out_features=10, bias=True)
    )
  )
  (predln): Identity()
  (vln): Sequential(
    (0): Identity()
    (1): Identity()
  )
  (elvln): Sequential(
    (0): Identity()
    (1): Identity()
  )
  (sln): LayerNorm((80,), eps=1e-05, elementwise_affine=False)
)
numel 528650
